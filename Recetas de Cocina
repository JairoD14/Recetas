import sqlite3
# Función para conectar a la base de datos SQLite
def conectar_base_datos():
    conn = sqlite3.connect('libro_recetas.db')
    return conn

# Función para crear la tabla de recetas si no existe
def crear_tabla_recetas(conn):
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS recetas (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nombre TEXT,
            ingredientes TEXT,
            pasos TEXT
        )
    ''')
    conn.commit()

# Función para agregar una nueva receta
def agregar_receta(conn, nombre, ingredientes, pasos):
    cursor = conn.cursor()
    cursor.execute('INSERT INTO recetas (nombre, ingredientes, pasos) VALUES (?, ?, ?)', (nombre, ingredientes, pasos))
    conn.commit()

# Función para actualizar una receta existente
def actualizar_receta(conn, receta_id, nombre, ingredientes, pasos):
    cursor = conn.cursor()
    cursor.execute('''
        UPDATE recetas
        SET nombre = ?, ingredientes = ?, pasos = ?
        WHERE id = ?
    ''', (nombre, ingredientes, pasos, receta_id))
    conn.commit()

# Función para eliminar una receta existente
def eliminar_receta(conn, receta_id):
    cursor = conn.cursor()
    cursor.execute('DELETE FROM recetas WHERE id = ?', (receta_id,))
    conn.commit()

# Función para obtener todas las recetas
def obtener_recetas(conn):
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM recetas')
    return cursor.fetchall()

# Función para buscar ingredientes y pasos de una receta por nombre
def buscar_receta(conn, nombre):
    cursor = conn.cursor()
    cursor.execute('SELECT ingredientes, pasos FROM recetas WHERE nombre = ?', (nombre,))
    return cursor.fetchone()

if __name__ == '__main__':
    conn = conectar_base_datos()
    crear_tabla_recetas(conn)

    while True:
        print("Opciones:")
        print("a) Agregar nueva receta")
        print("b) Actualizar receta existente")
        print("c) Eliminar receta existente")
        print("d) Ver listado de recetas")
        print("e) Buscar ingredientes y pasos de receta")
        print("f) Salir")

        opcion = input("Seleccione una opción: ").lower()

        if opcion == 'a':
            nombre = input("Nombre de la receta: ")
            ingredientes = input("Ingredientes: ")
            pasos = input("Pasos: ")
            agregar_receta(conn, nombre, ingredientes, pasos)

        elif opcion == 'b':
            receta_id = input("ID de la receta a actualizar: ")
            nombre = input("Nuevo nombre de la receta: ")
            ingredientes = input("Nuevos ingredientes: ")
            pasos = input("Nuevos pasos: ")
            actualizar_receta(conn, receta_id, nombre, ingredientes, pasos)

        elif opcion == 'c':
            receta_id = input("ID de la receta a eliminar: ")
            eliminar_receta(conn, receta_id)

        elif opcion == 'd':
            recetas = obtener_recetas(conn)
            for receta in recetas:
                print(receta)

        elif opcion == 'e':
            nombre = input("Nombre de la receta a buscar: ")
            resultado = buscar_receta(conn, nombre)
            if resultado:
                print("Ingredientes: {resultado[0]}\nPasos: {resultado[1]}")
            else:
                print("Receta no encontrada.")

        elif opcion == 'f':
            break

    conn.close()
